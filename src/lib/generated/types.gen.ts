// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseURL: 'http://localhost:8080' | (string & {});
};

export type RateRequest = {
    rating: number;
    comment?: string;
};

export type ApiResponseRateResponse = {
    msg: string;
    data?: RateResponse;
};

export type RateResponse = {
    id: number;
    raterNickname: string;
    rating: number;
    comment?: string;
    createdAt: string;
};

export type ChatMessageSendRequest = {
    content: string;
};

export type ApiResponseChatMessageResponse = {
    msg: string;
    data?: ChatMessageResponse;
};

export type ChatMessageResponse = {
    id?: number;
    roomId: number;
    senderId: number;
    content: string;
    createdAt: string;
};

export type ChatRoomStartRequest = {
    guideId: number;
    userId: number;
};

export type ApiResponseChatRoomResponse = {
    msg: string;
    data?: ChatRoomResponse;
};

export type ChatRoomResponse = {
    id?: number;
    title: string;
    guideId: number;
    userId: number;
    updatedAt: string;
    lastMessageId?: number;
};

export type UserRoleUpdateRequest = {
    role: 'USER' | 'ADMIN' | 'GUIDE' | 'PENDING';
};

export type ApiResponseLoginResponse = {
    msg: string;
    data?: LoginResponse;
};

export type LoginResponse = {
    accessToken: string;
};

export type AccessTokenResponse = {
    accessToken: string;
};

export type ApiResponseAccessTokenResponse = {
    msg: string;
    data?: AccessTokenResponse;
};

export type ApiResponseUnit = {
    msg: string;
    data?: Unit;
};

export type Unit = {
    [key: string]: unknown;
};

export type ApiResponseSessionsResponse = {
    msg: string;
    data?: SessionsResponse;
};

export type SessionsResponse = {
    sessionId: number;
    sessionTitle: string;
};

export type AiChatRequest = {
    message: string;
};

export type AiChatResponse = {
    userMessage: string;
    aiMessage: string;
};

export type ApiResponseAiChatResponse = {
    msg: string;
    data?: AiChatResponse;
};

export type UserUpdateRequest = {
    nickname?: string;
    profileImageUrl?: string;
};

export type ApiResponseUserResponse = {
    msg: string;
    data?: UserResponse;
};

export type UserResponse = {
    id: number;
    email: string;
    nickname: string;
    profileImageUrl?: string;
    role: 'USER' | 'ADMIN' | 'GUIDE' | 'PENDING';
};

export type GuideUpdateRequest = {
    nickname?: string;
    profileImageUrl?: string;
    location?: 'SEOUL' | 'BUSAN' | 'DAEGU' | 'INCHEON' | 'GWANGJU' | 'DAEJEON' | 'ULSAN' | 'SEJONG' | 'GYEONGGI' | 'GANGWON' | 'CHUNGCHEONGBUK' | 'CHUNGCHEONGNAM' | 'JEOLLABUK' | 'JEOLLANAM' | 'GYEONGSANGBUK' | 'GYEONGSANGNAM' | 'JEJU';
    description?: string;
};

export type ApiResponseGuideResponse = {
    msg: string;
    data?: GuideResponse;
};

export type GuideResponse = {
    id: number;
    email: string;
    nickname: string;
    profileImageUrl?: string;
    role: 'USER' | 'ADMIN' | 'GUIDE' | 'PENDING';
    location?: 'SEOUL' | 'BUSAN' | 'DAEGU' | 'INCHEON' | 'GWANGJU' | 'DAEJEON' | 'ULSAN' | 'SEJONG' | 'GYEONGGI' | 'GANGWON' | 'CHUNGCHEONGBUK' | 'CHUNGCHEONGNAM' | 'JEOLLABUK' | 'JEOLLANAM' | 'GYEONGSANGBUK' | 'GYEONGSANGNAM' | 'JEJU';
    description?: string;
};

export type UpdateSessionTitleRequest = {
    newTitle: string;
};

export type ApiResponseUpdateSessionTitleResponse = {
    msg: string;
    data?: UpdateSessionTitleResponse;
};

export type UpdateSessionTitleResponse = {
    newTitle: string;
};

export type TemperatureAndLandForecastDto = {
    regionCode?: string;
    baseTime?: string;
    minTemp?: number;
    maxTemp?: number;
    minTempRange?: string;
    maxTempRange?: string;
    amRainPercent?: number;
    pmRainPercent?: number;
    amWeather?: string;
    pmWeather?: string;
};

export type MidForecastDto = {
    regionCode?: string;
    baseTime?: string;
    precipitation?: string;
    temperature?: string;
    maritime?: string;
    variability?: string;
};

export type ApiResponseChatRoomListResponse = {
    msg: string;
    data?: ChatRoomListResponse;
};

export type ChatRoomListResponse = {
    rooms: Array<ChatRoomResponse>;
    nextCursor?: string;
};

export type ApiResponseListChatMessageResponse = {
    msg: string;
    data?: Array<ChatMessageResponse>;
};

export type ApiResponseGuideRatingSummaryResponse = {
    msg: string;
    data?: GuideRatingSummaryResponse;
};

export type GuideRatingSummaryResponse = {
    averageRating: number;
    totalRatings: number;
    ratings: Array<RateResponse>;
};

export type Pageable = {
    page?: number;
    size?: number;
    sort?: Array<string>;
};

export type ApiResponsePageRateResponse = {
    msg: string;
    data?: PageRateResponse;
};

export type PageRateResponse = {
    totalElements?: number;
    totalPages?: number;
    size?: number;
    content?: Array<RateResponse>;
    number?: number;
    sort?: SortObject;
    first?: boolean;
    last?: boolean;
    numberOfElements?: number;
    pageable?: PageableObject;
    empty?: boolean;
};

export type PageableObject = {
    offset?: number;
    sort?: SortObject;
    paged?: boolean;
    pageNumber?: number;
    pageSize?: number;
    unpaged?: boolean;
};

export type SortObject = {
    empty?: boolean;
    sorted?: boolean;
    unsorted?: boolean;
};

export type ApiResponseListGuideResponse = {
    msg: string;
    data?: Array<GuideResponse>;
};

export type ApiResponseListSessionsResponse = {
    msg: string;
    data?: Array<SessionsResponse>;
};

export type ApiResponseListSessionMessagesResponse = {
    msg: string;
    data?: Array<SessionMessagesResponse>;
};

export type SessionMessagesResponse = {
    content: string;
    senderType: 'USER' | 'AI';
};

export type RateGuideData = {
    body: RateRequest;
    path: {
        guideId: number;
    };
    query?: never;
    url: '/api/rate/guides/{guideId}';
};

export type RateGuideResponses = {
    /**
     * OK
     */
    200: ApiResponseRateResponse;
};

export type RateGuideResponse = RateGuideResponses[keyof RateGuideResponses];

export type RateAiSessionData = {
    body: RateRequest;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/rate/aichat/sessions/{sessionId}';
};

export type RateAiSessionResponses = {
    /**
     * OK
     */
    200: ApiResponseRateResponse;
};

export type RateAiSessionResponse = RateAiSessionResponses[keyof RateAiSessionResponses];

export type ListMessagesData = {
    body?: never;
    path: {
        roomId: number;
    };
    query?: {
        after?: number;
        limit?: number;
    };
    url: '/api/userchat/rooms/{roomId}/messages';
};

export type ListMessagesResponses = {
    /**
     * OK
     */
    200: ApiResponseListChatMessageResponse;
};

export type ListMessagesResponse = ListMessagesResponses[keyof ListMessagesResponses];

export type SendMessageData = {
    body: ChatMessageSendRequest;
    path: {
        roomId: number;
    };
    query?: never;
    url: '/api/userchat/rooms/{roomId}/messages';
};

export type SendMessageResponses = {
    /**
     * OK
     */
    200: ApiResponseChatMessageResponse;
};

export type SendMessageResponse = SendMessageResponses[keyof SendMessageResponses];

export type StartChatData = {
    body: ChatRoomStartRequest;
    path?: never;
    query?: never;
    url: '/api/userchat/rooms/start';
};

export type StartChatResponses = {
    /**
     * OK
     */
    200: ApiResponseChatRoomResponse;
};

export type StartChatResponse = StartChatResponses[keyof StartChatResponses];

export type UpdateUserRoleData = {
    body: UserRoleUpdateRequest;
    path?: never;
    query?: never;
    url: '/api/auth/role';
};

export type UpdateUserRoleResponses = {
    /**
     * OK
     */
    200: ApiResponseLoginResponse;
};

export type UpdateUserRoleResponse = UpdateUserRoleResponses[keyof UpdateUserRoleResponses];

export type RefreshAccessTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/refresh';
};

export type RefreshAccessTokenResponses = {
    /**
     * OK
     */
    200: ApiResponseAccessTokenResponse;
};

export type RefreshAccessTokenResponse = RefreshAccessTokenResponses[keyof RefreshAccessTokenResponses];

export type LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/logout';
};

export type LogoutResponses = {
    /**
     * OK
     */
    200: ApiResponseUnit;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type GetSessionsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/aichat/sessions';
};

export type GetSessionsResponses = {
    /**
     * OK
     */
    200: ApiResponseListSessionsResponse;
};

export type GetSessionsResponse = GetSessionsResponses[keyof GetSessionsResponses];

export type CreateSessionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/aichat/sessions';
};

export type CreateSessionResponses = {
    /**
     * OK
     */
    200: ApiResponseSessionsResponse;
};

export type CreateSessionResponse = CreateSessionResponses[keyof CreateSessionResponses];

export type GetSessionMessagesData = {
    body?: never;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/aichat/sessions/{sessionId}/messages';
};

export type GetSessionMessagesResponses = {
    /**
     * OK
     */
    200: ApiResponseListSessionMessagesResponse;
};

export type GetSessionMessagesResponse = GetSessionMessagesResponses[keyof GetSessionMessagesResponses];

export type SendMessage1Data = {
    body: AiChatRequest;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/aichat/sessions/{sessionId}/messages';
};

export type SendMessage1Responses = {
    /**
     * OK
     */
    200: ApiResponseAiChatResponse;
};

export type SendMessage1Response = SendMessage1Responses[keyof SendMessage1Responses];

export type DeleteMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/me';
};

export type DeleteMeResponses = {
    /**
     * OK
     */
    200: ApiResponseUnit;
};

export type DeleteMeResponse = DeleteMeResponses[keyof DeleteMeResponses];

export type GetMyProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/me';
};

export type GetMyProfileResponses = {
    /**
     * OK
     */
    200: ApiResponseUserResponse;
};

export type GetMyProfileResponse = GetMyProfileResponses[keyof GetMyProfileResponses];

export type UpdateMyProfileData = {
    body: UserUpdateRequest;
    path?: never;
    query?: never;
    url: '/api/users/me';
};

export type UpdateMyProfileResponses = {
    /**
     * OK
     */
    200: ApiResponseUserResponse;
};

export type UpdateMyProfileResponse = UpdateMyProfileResponses[keyof UpdateMyProfileResponses];

export type UpdateMyGuideProfileData = {
    body: GuideUpdateRequest;
    path?: never;
    query?: never;
    url: '/api/guides/me';
};

export type UpdateMyGuideProfileResponses = {
    /**
     * OK
     */
    200: ApiResponseGuideResponse;
};

export type UpdateMyGuideProfileResponse = UpdateMyGuideProfileResponses[keyof UpdateMyGuideProfileResponses];

export type UpdateSessionTitleData = {
    body: UpdateSessionTitleRequest;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/aichat/sessions/{sessionId}/title';
};

export type UpdateSessionTitleResponses = {
    /**
     * OK
     */
    200: ApiResponseUpdateSessionTitleResponse;
};

export type UpdateSessionTitleResponse2 = UpdateSessionTitleResponses[keyof UpdateSessionTitleResponses];

export type Test2Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/weather/test2';
};

export type Test2Responses = {
    /**
     * OK
     */
    200: Array<TemperatureAndLandForecastDto>;
};

export type Test2Response = Test2Responses[keyof Test2Responses];

export type Test1Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/weather/test1';
};

export type Test1Responses = {
    /**
     * OK
     */
    200: Array<MidForecastDto>;
};

export type Test1Response = Test1Responses[keyof Test1Responses];

export type ListRoomsData = {
    body?: never;
    path?: never;
    query?: {
        limit?: number;
        cursor?: string;
    };
    url: '/api/userchat/rooms';
};

export type ListRoomsResponses = {
    /**
     * OK
     */
    200: ApiResponseChatRoomListResponse;
};

export type ListRoomsResponse = ListRoomsResponses[keyof ListRoomsResponses];

export type DeleteRoomData = {
    body?: never;
    path: {
        roomId: number;
    };
    query?: never;
    url: '/api/userchat/rooms/{roomId}';
};

export type DeleteRoomResponses = {
    /**
     * OK
     */
    200: ApiResponseUnit;
};

export type DeleteRoomResponse = DeleteRoomResponses[keyof DeleteRoomResponses];

export type GetData = {
    body?: never;
    path: {
        roomId: number;
    };
    query?: never;
    url: '/api/userchat/rooms/{roomId}';
};

export type GetResponses = {
    /**
     * OK
     */
    200: ApiResponseChatRoomResponse;
};

export type GetResponse = GetResponses[keyof GetResponses];

export type GetMyGuideRatingsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/rate/guides/my';
};

export type GetMyGuideRatingsResponses = {
    /**
     * OK
     */
    200: ApiResponseGuideRatingSummaryResponse;
};

export type GetMyGuideRatingsResponse = GetMyGuideRatingsResponses[keyof GetMyGuideRatingsResponses];

export type GetAllAiSessionRatingsData = {
    body?: never;
    path?: never;
    query: {
        pageable: Pageable;
    };
    url: '/api/rate/admin/aichat/sessions';
};

export type GetAllAiSessionRatingsResponses = {
    /**
     * OK
     */
    200: ApiResponsePageRateResponse;
};

export type GetAllAiSessionRatingsResponse = GetAllAiSessionRatingsResponses[keyof GetAllAiSessionRatingsResponses];

export type GetAllGuidesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/guides';
};

export type GetAllGuidesResponses = {
    /**
     * OK
     */
    200: ApiResponseListGuideResponse;
};

export type GetAllGuidesResponse = GetAllGuidesResponses[keyof GetAllGuidesResponses];

export type GetGuideByIdData = {
    body?: never;
    path: {
        guideId: number;
    };
    query?: never;
    url: '/api/guides/{guideId}';
};

export type GetGuideByIdResponses = {
    /**
     * OK
     */
    200: ApiResponseGuideResponse;
};

export type GetGuideByIdResponse = GetGuideByIdResponses[keyof GetGuideByIdResponses];

export type DeleteSessionData = {
    body?: never;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/aichat/sessions/{sessionId}';
};

export type DeleteSessionResponses = {
    /**
     * OK
     */
    200: ApiResponseUnit;
};

export type DeleteSessionResponse = DeleteSessionResponses[keyof DeleteSessionResponses];
